{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"6MAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,4BACGH,EAAKI,QACN,4BAAQC,QAASJ,GAAmBC,KCgB3B,EAtBA,WACb,IAAMI,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNR,WAAW,GAEb,OAAOG,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAcxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAfR,aAesBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UApBF,aAoBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCmE5BK,EApFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRC,IAEGhB,MAAK,SAAAiB,GACJP,EAASO,QAEZ,IAEH,IAuCMC,EAAcL,EAChBJ,EACAA,EAAMU,QAAO,SAAA/B,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,qCACA,6BACE,4BAAQE,QAAS,kBAAMqB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGK,EAAYE,KAAI,SAAChC,EAAMiC,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACLjC,KAAMA,EACNC,iBAAkB,kBAvCD,SAACS,GACjB,0CAAsCA,GAA/C,IACMV,EAAOqB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQrC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDyB,EACUlB,EAAI2B,GACXzB,MAAK,SAAA0B,GACJhB,EAASD,EAAMW,KAAI,SAAAhC,GAAI,OAAIA,EAAKU,KAAOA,EAAKV,EAAOsC,SAEpDC,OAAM,SAAAC,GACLC,MAAM,aAAD,OACUzC,EAAKI,QADf,sCAGLkB,EAASD,EAAMU,QAAO,SAAAK,GAAC,OAAIA,EAAE1B,KAAOA,SAyBRgC,CAAmB1C,EAAKU,WAItD,0BAAMiC,SA5DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB1C,QAASmB,EACTZ,MAAM,IAAIoC,MAAOC,cACjB7C,UAAW8C,KAAKC,SAAW,GAC3BxC,GAAIW,EAAM8B,OAAS,GAGrBvB,EACUkB,GACPlC,MAAK,SAAA0B,GACJhB,EAASD,EAAMN,OAAOuB,IACtBd,EAAW,SAgDX,2BACE4B,MAAO7B,EACP8B,SA5BiB,SAACT,GACxBpB,EAAWoB,EAAMU,OAAOF,UA6BpB,4BAAQG,KAAK,UAAb,WC/ERC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5ea3bd35.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: 'This note is not saved to server',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true,\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting))\r\n  //return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n  \r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const url = `http://localhost:3001/api/notes/${id}`\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        alert(\r\n          `the note '${note.content}' was already deleted from server`\r\n        )\r\n        setNotes(notes.filter(n => n.id !== id))     \r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>      \r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note\r\n            key={i}\r\n            note={note} \r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}